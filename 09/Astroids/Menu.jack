class Menu{
    field int selector;
    field int x, y, x2, y2;

    constructor Menu new(){
        let x = 192;
        let y = 140;
        let x2 = 316;
        let y2 = 159;
        let selector = 0;

        do Output.moveCursor(4, 9);
        do Output.printString("               _             _     _     _ ");       do Output.moveCursor(5, 9);
        do Output.printString("     /\\       | |           (_)   | |   | |");      do Output.moveCursor(6, 9);
        do Output.printString("    /  \\   ___| |_ _ __ ___  _  __| |___| |");      do Output.moveCursor(7, 9);
        do Output.printString("   / /\\ \\ / __| __| '__/ _ \\| |/ _` / __| |");    do Output.moveCursor(8, 9);
        do Output.printString("  / ____ \\\\__ | |_| | | (_) | | (_| \\__ |_|");    do Output.moveCursor(9, 9);
        do Output.printString(" /_/    \\_|___/\\__|_|  \\___/|_|\\__,_|___(_)");

        do drawBoarder(x, y, x2, y2, true);

        do drawLines();

        return this;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    method int refresh(){
        var int key;
        let key = 0;

        while ( key = 0 ) {
            let key = Keyboard.keyPressed();
            do Sys.wait(100);
        }


        if( key = 87 ){
            if( ~(selector = 0) ){
                do drawBoarder(x, y+(22*selector), x2, y2+(22*selector), false);

                let selector = selector - 1;

                do drawBoarder(x, y+(22*selector), x2, y2+(22*selector), true);
                do drawLines();


            }
        }else{if( key = 83 ){
            if( ~(selector = 2) ){
                do drawBoarder(x, y+(22*selector), x2, y2+(22*selector), false);

                let selector = selector + 1;

                do drawBoarder(x, y+(22*selector), x2, y2+(22*selector), true);
                do drawLines();
            }
        }else{if( key = 128 ){
                if( selector = 0){
                    return 1;
                }else{if( selector = 1){
                    return 2;
                }else{if( selector = 2){
                    do Screen.clearScreen();
                    do Output.moveCursor(13, 27);
                    do Output.printString("Goodbye!");
                    do Sys.wait(1500);
                    do Sys.halt();
                }}}
        }}}

        return 0;
    }

    method void drawBoarder(int x, int y, int x2, int y2, boolean color){
        do Screen.setColor(color);
        do Screen.drawLine(x, y, x2, y);
        do Screen.drawLine(x, y2, x2, y2);
        do Screen.drawLine(x, y, x, y2);
        do Screen.drawLine(x2, y, x2, y2);
        return;
    }

    method void drawLines(){
        do Output.moveCursor(13, 28);
        do Output.printString("1 Player");
        do Output.moveCursor(15, 28);
        do Output.printString("2 Player");
        do Output.moveCursor(17, 30);
        do Output.printString("Exit");
        return;
    }


}